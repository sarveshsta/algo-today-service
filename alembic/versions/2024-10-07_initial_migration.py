"""Initial migration

Revision ID: fa6c1a60fd77
Revises: 
Create Date: 2024-10-07 17:35:03.875800

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fa6c1a60fd77"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("auth_permission_content_type_id_2f476e4b", table_name="auth_permission")
    op.drop_table("auth_permission")
    op.drop_index("django_admin_log_content_type_id_c4bce8eb", table_name="django_admin_log")
    op.drop_index("django_admin_log_user_id_c564eba6", table_name="django_admin_log")
    op.drop_table("django_admin_log")
    op.drop_index("auth_user_user_permissions_permission_id_1fbb5f2c", table_name="auth_user_user_permissions")
    op.drop_index("auth_user_user_permissions_user_id_a95ead1b", table_name="auth_user_user_permissions")
    op.drop_table("auth_user_user_permissions")
    op.drop_index("auth_group_permissions_group_id_b120cbf9", table_name="auth_group_permissions")
    op.drop_index("auth_group_permissions_permission_id_84c5c92e", table_name="auth_group_permissions")
    op.drop_table("auth_group_permissions")
    op.drop_index("algo_app_userstrategy_user_id_5e28f1d1", table_name="algo_app_userstrategy")
    op.drop_table("algo_app_userstrategy")
    op.drop_index("ix_strategy_id", table_name="strategy")
    op.drop_index("ix_strategy_index", table_name="strategy")
    op.drop_index("ix_strategy_strategy_name", table_name="strategy")
    op.drop_index("ix_strategy_user_id", table_name="strategy")
    op.drop_table("strategy")
    op.drop_table("algo_app_phoneotp")
    op.drop_index("algo_app_userorders_user_id_f9d223c4", table_name="algo_app_userorders")
    op.drop_table("algo_app_userorders")
    op.drop_index("auth_group_name_a6ea08ec_like", table_name="auth_group")
    op.drop_table("auth_group")
    op.drop_index("algo_app_strategy_user_id_c2cf2bf9", table_name="algo_app_strategy")
    op.drop_table("algo_app_strategy")
    op.drop_index("auth_user_username_6821ab7c_like", table_name="auth_user")
    op.drop_table("auth_user")
    op.drop_index("ix_orders_id", table_name="orders")
    op.drop_index("ix_orders_order_id", table_name="orders")
    op.drop_index("ix_orders_unique_order_id", table_name="orders")
    op.drop_index("ix_orders_user_id", table_name="orders")
    op.drop_table("orders")
    op.drop_table("django_content_type")
    op.drop_index("auth_user_groups_group_id_97559544", table_name="auth_user_groups")
    op.drop_index("auth_user_groups_user_id_6a12ed8b", table_name="auth_user_groups")
    op.drop_table("auth_user_groups")
    op.drop_index("algo_app_usertradedetails_user_id_17d1fcb1", table_name="algo_app_usertradedetails")
    op.drop_table("algo_app_usertradedetails")
    op.drop_index("algo_app_user_groups_group_id_1a389bd6", table_name="algo_app_user_groups")
    op.drop_index("algo_app_user_groups_user_id_14983424", table_name="algo_app_user_groups")
    op.drop_table("algo_app_user_groups")
    op.drop_index("ix_trades_user_id", table_name="trades")
    op.drop_table("trades")
    op.drop_table("django_migrations")
    op.drop_index("ix_tradingdata_id", table_name="tradingdata")
    op.drop_index("ix_tradingdata_user_id", table_name="tradingdata")
    op.drop_table("tradingdata")
    op.drop_index("algo_app_user_user_permissions_permission_id_9dd1befa", table_name="algo_app_user_user_permissions")
    op.drop_index("algo_app_user_user_permissions_user_id_53f111de", table_name="algo_app_user_user_permissions")
    op.drop_table("algo_app_user_user_permissions")
    op.drop_index("ix_tokens_expiry_date", table_name="tokens")
    op.drop_index("ix_tokens_id", table_name="tokens")
    op.drop_index("ix_tokens_symbol", table_name="tokens")
    op.drop_table("tokens")
    op.drop_index("django_session_expire_date_a5c62663", table_name="django_session")
    op.drop_index("django_session_session_key_c0390e0f_like", table_name="django_session")
    op.drop_table("django_session")
    op.drop_index("algo_app_user_email_4234e63c_like", table_name="algo_app_user")
    op.drop_index("algo_app_user_phone_b5c44db9_like", table_name="algo_app_user")
    op.drop_table("algo_app_user")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "algo_app_user",
        sa.Column("password", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column("last_login", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("phone", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=254), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_staff", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="algo_app_user_pkey"),
        sa.UniqueConstraint("email", name="algo_app_user_email_key"),
        sa.UniqueConstraint("phone", name="algo_app_user_phone_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("algo_app_user_phone_b5c44db9_like", "algo_app_user", ["phone"], unique=False)
    op.create_index("algo_app_user_email_4234e63c_like", "algo_app_user", ["email"], unique=False)
    op.create_table(
        "django_session",
        sa.Column("session_key", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column("session_data", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("expire_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("session_key", name="django_session_pkey"),
    )
    op.create_index("django_session_session_key_c0390e0f_like", "django_session", ["session_key"], unique=False)
    op.create_index("django_session_expire_date_a5c62663", "django_session", ["expire_date"], unique=False)
    op.create_table(
        "tokens",
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("symbol", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("expiry_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("strike", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("lotsize", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("instrumenttype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("exch_seg", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("tick_size", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("token", "id", name="tokens_pkey"),
        sa.UniqueConstraint("token", name="tokens_token_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_tokens_symbol", "tokens", ["symbol"], unique=False)
    op.create_index("ix_tokens_id", "tokens", ["id"], unique=False)
    op.create_index("ix_tokens_expiry_date", "tokens", ["expiry_date"], unique=False)
    op.create_table(
        "algo_app_user_user_permissions",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["auth_permission.id"],
            name="algo_app_user_user_p_permission_id_9dd1befa_fk_auth_perm",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_user_user_p_user_id_53f111de_fk_algo_app_",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_user_user_permissions_pkey"),
        sa.UniqueConstraint(
            "user_id", "permission_id", name="algo_app_user_user_permi_user_id_permission_id_d700f4cb_uniq"
        ),
    )
    op.create_index(
        "algo_app_user_user_permissions_user_id_53f111de", "algo_app_user_user_permissions", ["user_id"], unique=False
    )
    op.create_index(
        "algo_app_user_user_permissions_permission_id_9dd1befa",
        "algo_app_user_user_permissions",
        ["permission_id"],
        unique=False,
    )
    op.create_table(
        "tradingdata",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("trace_candle", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("close", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("high", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("low", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("open", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("buying_multiplier", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("stop_loss_multiplier", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("sl_low_multiplier_1", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("sl_low_multiplier_2", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("trail_sl_1", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("trail_sl_2", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("modify_stop_loss_1", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("modify_stop_loss_2", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="tradingdata_pkey"),
    )
    op.create_index("ix_tradingdata_user_id", "tradingdata", ["user_id"], unique=False)
    op.create_index("ix_tradingdata_id", "tradingdata", ["id"], unique=False)
    op.create_table(
        "django_migrations",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("app", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("applied", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="django_migrations_pkey"),
    )
    op.create_table(
        "trades",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("signal", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("trade_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("token_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["token_id"], ["tokens.token"], name="trades_token_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="trades_pkey"),
    )
    op.create_index("ix_trades_user_id", "trades", ["user_id"], unique=False)
    op.create_table(
        "algo_app_user_groups",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["auth_group.id"],
            name="algo_app_user_groups_group_id_1a389bd6_fk_auth_group_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_user_groups_user_id_14983424_fk_algo_app_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_user_groups_pkey"),
        sa.UniqueConstraint("user_id", "group_id", name="algo_app_user_groups_user_id_group_id_0289cf79_uniq"),
    )
    op.create_index("algo_app_user_groups_user_id_14983424", "algo_app_user_groups", ["user_id"], unique=False)
    op.create_index("algo_app_user_groups_group_id_1a389bd6", "algo_app_user_groups", ["group_id"], unique=False)
    op.create_table(
        "algo_app_usertradedetails",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("trade_type", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("cepe", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("trade_price", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("index", sa.VARCHAR(length=25), autoincrement=False, nullable=True),
        sa.Column("token", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("symbol", sa.VARCHAR(length=40), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_usertradedetails_user_id_17d1fcb1_fk_algo_app_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_usertradedetails_pkey"),
    )
    op.create_index(
        "algo_app_usertradedetails_user_id_17d1fcb1", "algo_app_usertradedetails", ["user_id"], unique=False
    )
    op.create_table(
        "auth_user_groups",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["auth_group.id"],
            name="auth_user_groups_group_id_97559544_fk_auth_group_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_user.id"],
            name="auth_user_groups_user_id_6a12ed8b_fk_auth_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="auth_user_groups_pkey"),
        sa.UniqueConstraint("user_id", "group_id", name="auth_user_groups_user_id_group_id_94350c0c_uniq"),
    )
    op.create_index("auth_user_groups_user_id_6a12ed8b", "auth_user_groups", ["user_id"], unique=False)
    op.create_index("auth_user_groups_group_id_97559544", "auth_user_groups", ["group_id"], unique=False)
    op.create_table(
        "django_content_type",
        sa.Column(
            "id",
            sa.INTEGER(),
            sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("app_label", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("model", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="django_content_type_pkey"),
        sa.UniqueConstraint("app_label", "model", name="django_content_type_app_label_model_76bd3d3b_uniq"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("unique_order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("symboltoken", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("signal", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("ordertype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("producttype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("duration", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("stoploss", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("average_price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("transactiontime", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("exchange_order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("full_response", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="orders_pkey"),
    )
    op.create_index("ix_orders_user_id", "orders", ["user_id"], unique=False)
    op.create_index("ix_orders_unique_order_id", "orders", ["unique_order_id"], unique=False)
    op.create_index("ix_orders_order_id", "orders", ["order_id"], unique=False)
    op.create_index("ix_orders_id", "orders", ["id"], unique=False)
    op.create_table(
        "auth_user",
        sa.Column(
            "id",
            sa.INTEGER(),
            sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("password", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column("last_login", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=254), autoincrement=False, nullable=False),
        sa.Column("is_staff", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("date_joined", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="auth_user_pkey"),
        sa.UniqueConstraint("username", name="auth_user_username_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("auth_user_username_6821ab7c_like", "auth_user", ["username"], unique=False)
    op.create_table(
        "algo_app_strategy",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=30), autoincrement=False, nullable=True),
        sa.Column("strategy_id", sa.VARCHAR(length=40), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("advantages", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_strategy_user_id_c2cf2bf9_fk_algo_app_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_strategy_pkey"),
    )
    op.create_index("algo_app_strategy_user_id_c2cf2bf9", "algo_app_strategy", ["user_id"], unique=False)
    op.create_table(
        "auth_group",
        sa.Column(
            "id",
            sa.INTEGER(),
            sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="auth_group_pkey"),
        sa.UniqueConstraint("name", name="auth_group_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("auth_group_name_a6ea08ec_like", "auth_group", ["name"], unique=False)
    op.create_table(
        "algo_app_userorders",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("order_id", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_userorders_user_id_f9d223c4_fk_algo_app_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_userorders_pkey"),
    )
    op.create_index("algo_app_userorders_user_id_f9d223c4", "algo_app_userorders", ["user_id"], unique=False)
    op.create_table(
        "algo_app_phoneotp",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.Column("phone", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("otp", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("is_verified", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="algo_app_phoneotp_pkey"),
        sa.UniqueConstraint("phone", name="algo_app_phoneotp_phone_key"),
    )
    op.create_table(
        "strategy",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("strategy_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("index", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("strike_price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("expiry", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("option", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("chart_time", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator1", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator2", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator3", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator4", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="strategy_pkey"),
    )
    op.create_index("ix_strategy_user_id", "strategy", ["user_id"], unique=False)
    op.create_index("ix_strategy_strategy_name", "strategy", ["strategy_name"], unique=False)
    op.create_index("ix_strategy_index", "strategy", ["index"], unique=False)
    op.create_index("ix_strategy_id", "strategy", ["id"], unique=False)
    op.create_table(
        "algo_app_userstrategy",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=30), autoincrement=False, nullable=True),
        sa.Column("strategy_id", sa.VARCHAR(length=40), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("advantages", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["algo_app_user.id"],
            name="algo_app_userstrategy_user_id_5e28f1d1_fk_algo_app_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="algo_app_userstrategy_pkey"),
    )
    op.create_index("algo_app_userstrategy_user_id_5e28f1d1", "algo_app_userstrategy", ["user_id"], unique=False)
    op.create_table(
        "auth_group_permissions",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["auth_group.id"],
            name="auth_group_permissions_group_id_b120cbf9_fk_auth_group_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["auth_permission.id"],
            name="auth_group_permissio_permission_id_84c5c92e_fk_auth_perm",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="auth_group_permissions_pkey"),
        sa.UniqueConstraint(
            "group_id", "permission_id", name="auth_group_permissions_group_id_permission_id_0cd325b0_uniq"
        ),
    )
    op.create_index(
        "auth_group_permissions_permission_id_84c5c92e", "auth_group_permissions", ["permission_id"], unique=False
    )
    op.create_index("auth_group_permissions_group_id_b120cbf9", "auth_group_permissions", ["group_id"], unique=False)
    op.create_table(
        "auth_user_user_permissions",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["auth_permission.id"],
            name="auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_user.id"],
            name="auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="auth_user_user_permissions_pkey"),
        sa.UniqueConstraint(
            "user_id", "permission_id", name="auth_user_user_permissions_user_id_permission_id_14a6b632_uniq"
        ),
    )
    op.create_index(
        "auth_user_user_permissions_user_id_a95ead1b", "auth_user_user_permissions", ["user_id"], unique=False
    )
    op.create_index(
        "auth_user_user_permissions_permission_id_1fbb5f2c",
        "auth_user_user_permissions",
        ["permission_id"],
        unique=False,
    )
    op.create_table(
        "django_admin_log",
        sa.Column(
            "id",
            sa.INTEGER(),
            sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("action_time", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.Column("object_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("object_repr", sa.VARCHAR(length=200), autoincrement=False, nullable=False),
        sa.Column("action_flag", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column("change_message", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("content_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.CheckConstraint("action_flag >= 0", name="django_admin_log_action_flag_check"),
        sa.ForeignKeyConstraint(
            ["content_type_id"],
            ["django_content_type.id"],
            name="django_admin_log_content_type_id_c4bce8eb_fk_django_co",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_user.id"],
            name="django_admin_log_user_id_c564eba6_fk_auth_user_id",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="django_admin_log_pkey"),
    )
    op.create_index("django_admin_log_user_id_c564eba6", "django_admin_log", ["user_id"], unique=False)
    op.create_index("django_admin_log_content_type_id_c4bce8eb", "django_admin_log", ["content_type_id"], unique=False)
    op.create_table(
        "auth_permission",
        sa.Column(
            "id",
            sa.INTEGER(),
            sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("content_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("codename", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["content_type_id"],
            ["django_content_type.id"],
            name="auth_permission_content_type_id_2f476e4b_fk_django_co",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="auth_permission_pkey"),
        sa.UniqueConstraint(
            "content_type_id", "codename", name="auth_permission_content_type_id_codename_01ab375a_uniq"
        ),
    )
    op.create_index("auth_permission_content_type_id_2f476e4b", "auth_permission", ["content_type_id"], unique=False)
    # ### end Alembic commands ###
