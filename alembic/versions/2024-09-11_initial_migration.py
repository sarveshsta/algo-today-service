"""Initial migration

Revision ID: ca9d777fc35b
Revises: 4a77d0e6f363
Create Date: 2024-09-11 13:11:58.570043

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ca9d777fc35b"
down_revision: Union[str, None] = "4a77d0e6f363"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_orders_id", table_name="orders")
    op.drop_index("ix_orders_order_id", table_name="orders")
    op.drop_index("ix_orders_unique_order_id", table_name="orders")
    op.drop_index("ix_orders_user_id", table_name="orders")
    op.drop_table("orders")
    op.drop_index("ix_tokens_expiry_date", table_name="tokens")
    op.drop_index("ix_tokens_id", table_name="tokens")
    op.drop_index("ix_tokens_symbol", table_name="tokens")
    op.drop_table("tokens")
    op.drop_index("ix_trades_user_id", table_name="trades")
    op.drop_table("trades")
    op.drop_index("ix_strategy_id", table_name="strategy")
    op.drop_index("ix_strategy_index", table_name="strategy")
    op.drop_index("ix_strategy_strategy_name", table_name="strategy")
    op.drop_index("ix_strategy_user_id", table_name="strategy")
    op.drop_table("strategy")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "strategy",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("strategy_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("index", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("strike_price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("expiry", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("option", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("chart_time", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator1", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator2", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator3", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("indicator4", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="strategy_pkey"),
    )
    op.create_index("ix_strategy_user_id", "strategy", ["user_id"], unique=False)
    op.create_index("ix_strategy_strategy_name", "strategy", ["strategy_name"], unique=False)
    op.create_index("ix_strategy_index", "strategy", ["index"], unique=False)
    op.create_index("ix_strategy_id", "strategy", ["id"], unique=False)
    op.create_table(
        "trades",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("signal", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("trade_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["token"], ["tokens.token"], name="trades_token_fkey"),
        sa.PrimaryKeyConstraint("id", name="trades_pkey"),
    )
    op.create_index("ix_trades_user_id", "trades", ["user_id"], unique=False)
    op.create_table(
        "tokens",
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("symbol", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("expiry_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("strike", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("lotsize", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("instrumenttype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("exch_seg", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("tick_size", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("token", "id", name="tokens_pkey"),
        sa.UniqueConstraint("token", name="tokens_token_key"),
    )
    op.create_index("ix_tokens_symbol", "tokens", ["symbol"], unique=False)
    op.create_index("ix_tokens_id", "tokens", ["id"], unique=False)
    op.create_index("ix_tokens_expiry_date", "tokens", ["expiry_date"], unique=False)
    op.create_table(
        "orders",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("unique_order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("symboltoken", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("signal", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("ordertype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("producttype", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("duration", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("stoploss", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("average_price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("transactiontime", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("exchange_order_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("full_response", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="orders_pkey"),
    )
    op.create_index("ix_orders_user_id", "orders", ["user_id"], unique=False)
    op.create_index("ix_orders_unique_order_id", "orders", ["unique_order_id"], unique=False)
    op.create_index("ix_orders_order_id", "orders", ["order_id"], unique=False)
    op.create_index("ix_orders_id", "orders", ["id"], unique=False)
    # ### end Alembic commands ###
